{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _configurationValidation = require(\"@okta/configuration-validation\");\n\nvar _oktaAuthJs = _interopRequireDefault(require(\"@okta/okta-auth-js\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar AuthService = /*#__PURE__*/function () {\n  function AuthService(config) {\n    (0, _classCallCheck2[\"default\"])(this, AuthService);\n    var testing = {\n      // If the config is undefined, cast it to false\n      disableHttpsCheck: !!config.disableHttpsCheck\n    }; // normalize authJS config. In this SDK, we allow underscore on certain properties, but AuthJS consistently uses camel case.\n\n    var authConfig = (0, _configurationValidation.buildConfigObject)(config);\n    (0, _configurationValidation.assertIssuer)(authConfig.issuer, testing);\n    (0, _configurationValidation.assertClientId)(authConfig.clientId);\n    (0, _configurationValidation.assertRedirectUri)(authConfig.redirectUri);\n    this._oktaAuth = new _oktaAuthJs[\"default\"](authConfig);\n    this._oktaAuth.userAgent = \"\".concat(\"@okta/okta-react\", \"/\").concat(\"3.0.8\", \" \").concat(this._oktaAuth.userAgent);\n    this._config = authConfig; // use normalized config\n\n    this._pending = {}; // manage overlapping async calls \n\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.updateAuthState = this.updateAuthState.bind(this);\n    this.clearAuthState = this.clearAuthState.bind(this);\n    this.emitAuthState = this.emitAuthState.bind(this);\n    this.getAuthState = this.getAuthState.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this._convertLogoutPathToOptions = this._convertLogoutPathToOptions.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.emit = this.emit.bind(this);\n    this.on = this.on.bind(this);\n    this.clearAuthState(); // Remove expired token or renew token if autoRenew is true\n    // This process will keep authState synced with states in tokenManager\n\n    this.on('expired', this.updateAuthState);\n  }\n\n  (0, _createClass2[\"default\"])(AuthService, [{\n    key: \"getTokenManager\",\n    value: function getTokenManager() {\n      return this._oktaAuth.tokenManager;\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function () {\n      var _handleAuthentication = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _yield$this$_oktaAuth, tokens, authState, location;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._pending.handleAuthentication) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", null);\n\n              case 2:\n                _context.prev = 2;\n                this._pending.handleAuthentication = true;\n                _context.next = 6;\n                return this._oktaAuth.token.parseFromUrl();\n\n              case 6:\n                _yield$this$_oktaAuth = _context.sent;\n                tokens = _yield$this$_oktaAuth.tokens;\n\n                if (tokens.idToken) {\n                  this._oktaAuth.tokenManager.add('idToken', tokens.idToken);\n                }\n\n                if (tokens.accessToken) {\n                  this._oktaAuth.tokenManager.add('accessToken', tokens.accessToken);\n                }\n\n                _context.next = 12;\n                return this.updateAuthState();\n\n              case 12:\n                authState = this.getAuthState();\n\n                if (authState.isAuthenticated) {\n                  location = this.getFromUri();\n                  window.location.assign(location);\n                }\n\n                this._pending.handleAuthentication = null;\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n                this._pending.handleAuthentication = null;\n                this.emitAuthState({\n                  isAuthenticated: false,\n                  error: _context.t0,\n                  idToken: null,\n                  accessToken: null\n                });\n\n              case 21:\n                return _context.abrupt(\"return\");\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 17]]);\n      }));\n\n      function handleAuthentication() {\n        return _handleAuthentication.apply(this, arguments);\n      }\n\n      return handleAuthentication;\n    }()\n  }, {\n    key: \"clearAuthState\",\n    value: function clearAuthState() {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.emitAuthState(_objectSpread(_objectSpread({}, AuthService.DEFAULT_STATE), state));\n      return;\n    }\n  }, {\n    key: \"emitAuthState\",\n    value: function emitAuthState(state) {\n      this._authState = state;\n      this.emit('authStateChange', this.getAuthState());\n      return;\n    }\n  }, {\n    key: \"getAuthState\",\n    value: function getAuthState() {\n      return this._authState;\n    }\n  }, {\n    key: \"updateAuthState\",\n    value: function () {\n      var _updateAuthState = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var _this = this;\n\n        var authStateUpdate, accessToken, idToken, isAuthenticated;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._pending.authStateUpdate) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this._pending.authStateUpdate.promise);\n\n              case 2:\n                // create a promise to return in case of multiple parallel requests\n                this._pending.authStateUpdate = {};\n                this._pending.authStateUpdate.promise = new Promise(function (resolve) {\n                  // Promise can only resolve, any error is in the resolve value\n                  // and uncaught exceptions make Front SDKs angry\n                  _this._pending.authStateUpdate.resolve = resolve;\n                }); // copy to return after emitAuthState has cleared the pending object\n\n                authStateUpdate = this._pending.authStateUpdate;\n                _context2.prev = 5;\n                _context2.next = 8;\n                return this.getAccessToken();\n\n              case 8:\n                accessToken = _context2.sent;\n                _context2.next = 11;\n                return this.getIdToken();\n\n              case 11:\n                idToken = _context2.sent;\n\n                if (!this._config.isAuthenticated) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                _context2.next = 15;\n                return this._config.isAuthenticated();\n\n              case 15:\n                _context2.t0 = _context2.sent;\n                _context2.next = 19;\n                break;\n\n              case 18:\n                _context2.t0 = !!(accessToken || idToken);\n\n              case 19:\n                isAuthenticated = _context2.t0;\n                this._pending.authStateUpdate = null;\n                this.emitAuthState({\n                  isAuthenticated: isAuthenticated,\n                  idToken: idToken,\n                  accessToken: accessToken\n                });\n                _context2.next = 28;\n                break;\n\n              case 24:\n                _context2.prev = 24;\n                _context2.t1 = _context2[\"catch\"](5);\n                this._pending.authStateUpdate = null;\n                this.emitAuthState({\n                  isAuthenticated: false,\n                  error: _context2.t1,\n                  idToken: null,\n                  accessToken: null\n                });\n\n              case 28:\n                authStateUpdate.resolve();\n                return _context2.abrupt(\"return\", authStateUpdate.promise);\n\n              case 30:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 24]]);\n      }));\n\n      function updateAuthState() {\n        return _updateAuthState.apply(this, arguments);\n      }\n\n      return updateAuthState;\n    }()\n  }, {\n    key: \"getUser\",\n    value: function () {\n      var _getUser = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3() {\n        var accessToken, idToken;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._oktaAuth.tokenManager.get('accessToken');\n\n              case 2:\n                accessToken = _context3.sent;\n                _context3.next = 5;\n                return this._oktaAuth.tokenManager.get('idToken');\n\n              case 5:\n                idToken = _context3.sent;\n\n                if (!(!accessToken || !idToken)) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", idToken ? idToken.claims : undefined);\n\n              case 8:\n                return _context3.abrupt(\"return\", this._oktaAuth.token.getUserInfo());\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getUser() {\n        return _getUser.apply(this, arguments);\n      }\n\n      return getUser;\n    }()\n  }, {\n    key: \"getIdToken\",\n    value: function () {\n      var _getIdToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4() {\n        var idToken;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this._oktaAuth.tokenManager.get('idToken');\n\n              case 3:\n                idToken = _context4.sent;\n                return _context4.abrupt(\"return\", idToken.idToken);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                return _context4.abrupt(\"return\", undefined);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function getIdToken() {\n        return _getIdToken.apply(this, arguments);\n      }\n\n      return getIdToken;\n    }()\n  }, {\n    key: \"getAccessToken\",\n    value: function () {\n      var _getAccessToken = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var accessToken;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return this._oktaAuth.tokenManager.get('accessToken');\n\n              case 3:\n                accessToken = _context5.sent;\n                return _context5.abrupt(\"return\", accessToken.accessToken);\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                return _context5.abrupt(\"return\", undefined);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      function getAccessToken() {\n        return _getAccessToken.apply(this, arguments);\n      }\n\n      return getAccessToken;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee6(fromUri, additionalParams) {\n        return _regenerator[\"default\"].wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!this._pending.handleLogin) {\n                  _context6.next = 2;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 2:\n                this._pending.handleLogin = true; // Update UI pending state\n\n                this.emitAuthState(_objectSpread(_objectSpread({}, this.getAuthState()), {}, {\n                  isPending: true\n                })); // Save the current url before redirect\n\n                this.setFromUri(fromUri); // will save current location if fromUri is undefined\n\n                _context6.prev = 5;\n\n                if (!this._config.onAuthRequired) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                _context6.next = 9;\n                return this._config.onAuthRequired(this);\n\n              case 9:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 10:\n                _context6.next = 12;\n                return this.redirect(additionalParams);\n\n              case 12:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 13:\n                _context6.prev = 13;\n                this._pending.handleLogin = null;\n                return _context6.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[5,, 13, 16]]);\n      }));\n\n      function login(_x, _x2) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"_convertLogoutPathToOptions\",\n    value: function _convertLogoutPathToOptions(redirectUri) {\n      if (typeof redirectUri !== 'string') {\n        return redirectUri;\n      } // If a relative path was passed, convert to absolute URI\n\n\n      if (redirectUri.charAt(0) === '/') {\n        redirectUri = window.location.origin + redirectUri;\n      }\n\n      return {\n        postLogoutRedirectUri: redirectUri\n      };\n    }\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee7() {\n        var options,\n            _args7 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                options = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};\n                options = this._convertLogoutPathToOptions(options);\n                _context7.next = 4;\n                return this._oktaAuth.signOut(options);\n\n              case 4:\n                this.clearAuthState();\n\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  }, {\n    key: \"redirect\",\n    value: function () {\n      var _redirect = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee8() {\n        var additionalParams,\n            params,\n            _args8 = arguments;\n        return _regenerator[\"default\"].wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                additionalParams = _args8.length > 0 && _args8[0] !== undefined ? _args8[0] : {}; // normalize config object\n\n                params = (0, _configurationValidation.buildConfigObject)(additionalParams); // set defaults\n\n                params.responseType = params.responseType || this._config.responseType || ['id_token', 'token'];\n                params.scopes = params.scopes || this._config.scopes || ['openid', 'email', 'profile'];\n                return _context8.abrupt(\"return\", this._oktaAuth.token.getWithRedirect(params));\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function redirect() {\n        return _redirect.apply(this, arguments);\n      }\n\n      return redirect;\n    }()\n  }, {\n    key: \"setFromUri\",\n    value: function setFromUri(fromUri) {\n      // Use current location if fromUri was not passed\n      fromUri = fromUri || window.location.href; // If a relative path was passed, convert to absolute URI\n\n      if (fromUri.charAt(0) === '/') {\n        fromUri = window.location.origin + fromUri;\n      }\n\n      sessionStorage.setItem('secureRouterReferrerPath', fromUri);\n    }\n  }, {\n    key: \"getFromUri\",\n    value: function getFromUri() {\n      var referrerKey = 'secureRouterReferrerPath';\n      var location = sessionStorage.getItem(referrerKey) || window.location.origin;\n      sessionStorage.removeItem(referrerKey);\n      return location;\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this._oktaAuth.emitter.on(event, callback, this._oktaAuth.emitter);\n\n      return function () {\n        _this2._oktaAuth.emitter.off(event, callback);\n      };\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(event, message) {\n      this._oktaAuth.emitter.emit(event, message);\n    }\n  }]);\n  return AuthService;\n}();\n\nAuthService.DEFAULT_STATE = {\n  isPending: true,\n  isAuthenticated: null,\n  idToken: null,\n  accessToken: null\n};\nvar _default = AuthService;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}