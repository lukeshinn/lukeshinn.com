{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _AuthService = _interopRequireDefault(require(\"./AuthService\"));\n\nvar _OktaContext = _interopRequireDefault(require(\"./OktaContext\"));\n/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nvar Security = function Security(props) {\n  var initialAuthService = (0, _react.useMemo)(function () {\n    // don't keep spawning new service instances if this component rerenders\n    return props.authService || new _AuthService[\"default\"](props);\n  }, [props]);\n\n  var _useState = (0, _react.useState)(initialAuthService),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 1),\n      authService = _useState2[0];\n\n  var _useState3 = (0, _react.useState)(authService.getAuthState()),\n      _useState4 = (0, _slicedToArray2[\"default\"])(_useState3, 2),\n      authState = _useState4[0],\n      setAuthState = _useState4[1];\n\n  (0, _react.useEffect)(function () {\n    var unsub = authService.on('authStateChange', function () {\n      setAuthState(authService.getAuthState());\n    });\n\n    if (!authService._oktaAuth.token.isLoginRedirect()) {\n      // Trigger an initial change event to make sure authState is latest when not in loginRedirect state\n      authService.updateAuthState();\n    }\n\n    return unsub;\n  }, [authService]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_OktaContext[\"default\"].Provider, {\n    value: {\n      authService: authService,\n      authState: authState\n    }\n  }, props.children);\n};\n\nvar _default = Security;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}