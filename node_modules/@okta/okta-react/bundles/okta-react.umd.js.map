{"version":3,"file":"okta-react.umd.js","sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/LoginCallback.tsx","../../src/SecureRoute.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx"],"sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void> | void;\nexport type OnAuthResumeFunction = () => void;\n\nexport type RestoreOriginalUriFunction = (oktaAuth: OktaAuth, originalUri: string) => Promise<void> | void;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState;\n    _onAuthRequired: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext);\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthResumeFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst LoginCallback: React.FC<{ \n  errorComponent?: React.ComponentType<{ error: Error }>,\n  onAuthResume?: OnAuthResumeFunction,\n}> = ({ errorComponent, onAuthResume }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const [callbackError, setCallbackError] = React.useState(null);\n\n  const authStateReady = !authState.isPending;\n  const ErrorReporter = errorComponent || OktaError;\n  React.useEffect(() => {\n    if (onAuthResume && oktaAuth.isInteractionRequired?.() ) {\n      onAuthResume();\n      return;\n    }\n    oktaAuth.handleLoginRedirect().catch(e => {\n      setCallbackError(e);\n    });\n  }, [oktaAuth]);\n\n  const authError = authStateReady ? authState.error : null;\n  const displayError = callbackError || authError;\n  if (displayError) { \n    return <ErrorReporter error={displayError}/>;\n  }\n\n  return null;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport { Route, useRouteMatch, RouteProps } from 'react-router-dom';\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n} & RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired, \n  ...routeProps \n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useRouteMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      oktaAuth.setOriginalUri();\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated && !authState.isPending) { \n      handleLogin();\n    }  \n\n  }, [\n    authState.isPending, \n    authState.isAuthenticated, \n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (!authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { AuthSdkError, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction, RestoreOriginalUriFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth,\n  restoreOriginalUri: RestoreOriginalUriFunction, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth,\n  restoreOriginalUri, \n  onAuthRequired, \n  children\n}) => { \n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return { \n        isPending: true,\n        isAuthenticated: false,\n        idToken: null,\n        accessToken: null,\n      };\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth || !restoreOriginalUri) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (oktaAuth.options.restoreOriginalUri && restoreOriginalUri) {\n      console.warn('Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component.');\n    }\n    oktaAuth.options.restoreOriginalUri = async (oktaAuth: unknown, originalUri: string) => {\n      restoreOriginalUri(oktaAuth as OktaAuth, originalUri);\n    };\n\n    // Add okta-react userAgent\n    oktaAuth.userAgent = `${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION} ${oktaAuth.userAgent}`;\n\n    // Update Security provider with latest authState\n    oktaAuth.authStateManager.subscribe((authState) => {\n      setAuthState(authState);\n    });\n\n    // Trigger an initial change event to make sure authState is latest\n    if (!oktaAuth.isLoginRedirect()) {\n      oktaAuth.authStateManager.updateAuthState();\n    }\n\n    return () => oktaAuth.authStateManager.unsubscribe();\n  }, [oktaAuth, restoreOriginalUri]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  if (!restoreOriginalUri) {\n    const err = new AuthSdkError('No restoreOriginalUri callback passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n"],"names":["OktaContext","React","useOktaAuth","OktaError","error","name","message","toString","errorComponent","onAuthResume","oktaAuth","authState","callbackError","setCallbackError","authStateReady","isPending","ErrorReporter","isInteractionRequired","handleLoginRedirect","e","authError","displayError","onAuthRequired","routeProps","_onAuthRequired","match","useRouteMatch","pendingLogin","handleLogin","current","setOriginalUri","onAuthRequiredFn","signInWithRedirect","isAuthenticated","Route","restoreOriginalUri","children","authStateManager","getAuthState","idToken","accessToken","setAuthState","options","console","warn","originalUri","userAgent","subscribe","isLoginRedirect","updateAuthState","unsubscribe","err","AuthSdkError","Provider","value","ComponentToWrap","WrappedComponent","props","oktaAuthProps","displayName"],"mappings":"ihEAyBMA,EAAcC,gBAAyC,MAEhDC,EAAc,kBAAoBD,aAAiBD,ICb1DG,EAAwC,gBAAGC,IAAAA,aAC5CA,EAAMC,MAAQD,EAAME,QACdL,yBAAIG,EAAMC,UAAQD,EAAME,SAE1BL,mCAAWG,EAAMG,6BCCrB,gBAAGC,IAAAA,eAAgBC,IAAAA,eACUP,IAAxBQ,IAAAA,SAAUC,IAAAA,cACwBV,WAAe,SAAlDW,OAAeC,OAEhBC,GAAkBH,EAAUI,UAC5BC,EAAgBR,GAAkBL,EACxCF,aAAgB,iBACVQ,cAAgBC,EAASO,iDAATP,IAClBD,IAGFC,EAASQ,6BAA4B,SAAAC,GACnCN,EAAiBM,QAElB,CAACT,QAEEU,EAAYN,EAAiBH,EAAUP,MAAQ,KAC/CiB,EAAeT,GAAiBQ,SAClCC,EACKpB,gBAACe,GAAcZ,MAAOiB,IAGxB,oCCvBgD,gBACvDC,IAAAA,eACGC,4BAE8CrB,IAAzCQ,IAAAA,SAAUC,IAAAA,UAAWa,IAAAA,gBACvBC,EAAQC,gBAAcH,GACtBI,EAAe1B,UAAa,UAElCA,aAAgB,eACR2B,8CAAc,uGACdD,EAAaE,4DAIjBF,EAAaE,SAAU,EAEvBnB,EAASoB,mBACHC,EAAmBT,GAAkBE,oCAEnCO,EAAiBrB,mDAEjBA,EAASsB,sHAKdP,IAIDd,EAAUsB,gBACZN,EAAaE,SAAU,EAKrBlB,EAAUsB,iBAAoBtB,EAAUI,WAC1Ca,OAGD,CACDjB,EAAUI,UACVJ,EAAUsB,gBACVvB,EACAe,EACAH,EACAE,IAGGb,EAAUsB,gBAKbhC,gBAACiC,yBACMX,IALA,iBC9CiC,gBAC1Cb,IAAAA,SACAyB,IAAAA,mBACAb,IAAAA,eACAc,IAAAA,aAEkCnC,YAAe,kBAC1CS,EAQEA,EAAS2B,iBAAiBC,eAPxB,CACLvB,WAAW,EACXkB,iBAAiB,EACjBM,QAAS,KACTC,YAAa,YANZ7B,OAAW8B,UAYlBxC,aAAgB,cACTS,GAAayB,SAKdzB,EAASgC,QAAQP,oBAAsBA,GACzCQ,QAAQC,KAAK,yLAEflC,EAASgC,QAAQP,+DAAqB,WAAOzB,EAAmBmC,mFAC9DV,EAAmBzB,EAAsBmC,sGAI3CnC,EAASoC,UAAe,8BAA4B,YAA+BpC,EAASoC,WAG5FpC,EAAS2B,iBAAiBU,WAAU,SAACpC,GACnC8B,EAAa9B,MAIVD,EAASsC,mBACZtC,EAAS2B,iBAAiBY,kBAGrB,kBAAMvC,EAAS2B,iBAAiBa,iBACtC,CAACxC,EAAUyB,KAETzB,EAAU,KACPyC,EAAM,IAAIC,eAAa,6DACtBnD,gBAACE,GAAUC,MAAO+C,QAGtBhB,EAAoB,KACjBgB,EAAM,IAAIC,eAAa,uEACtBnD,gBAACE,GAAUC,MAAO+C,WAIzBlD,gBAACD,EAAYqD,UAASC,MAAO,CAC3B5C,SAAAA,EACAC,UAAAA,EACAa,gBAAiBF,IAEhBc,mCCtEc,SACnBmB,OAEMC,EAAmB,SAACC,OAClBC,EAAgBxD,WACfD,gBAACsD,mBAAoBG,EAAoCD,YAElED,EAAiBG,YAAc,iBAAmBJ,EAAgBI,aAAeJ,EAAgBlD,MAC1FmD"}